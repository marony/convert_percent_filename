use std::io::Write;
use encoding::{Encoding, DecoderTrap};
use encoding::all::WINDOWS_31J;

// ASCII
// https://ja.wikipedia.org/wiki/ASCII
// ShiftJIS
// http://charset.7jp.net/sjis2.html

/// IEC8859-1に対応する文字
/// 対応する文字がない場合は"$xx"
/// https://ja.wikipedia.org/wiki/ISO/IEC_8859-1
const IEC8859_1_CHARS: [&str; 256] =
[
    "$00", "$01", "$02", "$03", "$04", "$05", "$06", "$07", "$08", "$09", "$0A", "$0B", "$0C", "$0D", "$0E", "$0F",
    "$10", "$11", "$12", "$13", "$14", "$15", "$16", "$17", "$18", "$19", "$1A", "$1B", "$1C", "$1D", "$1E", "$1F",
    r"SP", r"!", "\"", r"#", r"$", r"%", r"&", r"'", r"(", r")", r"*", r"+", r",", r"-", r".", r"/",
    r"0", r"1", r"2", r"3", r"4", r"5", r"6", r"7", r"8", r"9", r":", r";", r"<", r"=", r">", r"?",
    r"@", r"A", r"B", r"C", r"D", r"E", r"F", r"G", r"H", r"I", r"J", r"K", r"L", r"M", r"N", r"O",
    r"P", r"Q", r"R", r"S", r"T", r"U", r"V", r"W", r"X", r"Y", r"Z", r"[", r"\", r"]", r"^", r"_",
    r"`", r"a", r"b", r"c", r"d", r"e", r"f", r"g", r"h", r"i", r"j", r"k", r"l", r"m", r"n", r"o",
    r"p", r"q", r"r", r"s", r"t", r"u", r"v", r"w", r"x", r"y", r"z", r"{", r"|", r"}", r"~", "",
    "$80", "$81", "$82", "$83", "$84", "$85", "%86", "$87", "$88", "$89", "$8A", "$8B", "$8C", "$8D", "$8E", "$8F",
    "$90", "$91", "$92", "$93", "$94", "$95", "%96", "$97", "$98", "$99", "$9A", "$9B", "$9C", "$9D", "$9E", "$9F",
    r"NBSP", r"¡", r"¢", r"£", r"¤", r"¥", r"¦", r"§", r"¨", r"©", r"ª", r"«", r"¬", r"SHY", r"®", r"¯",
    r"°", r"±", r"²", r"³", r"´", r"µ", r"¶", r"·", r"¸", r"¹", r"º", r"»", r"¼", r"½", r"¾", r"¿",
    r"À", r"Á", r"Â", r"Ã", r"Ä", r"Å", r"Æ", r"Ç", r"È", r"É", r"Ê", r"Ë", r"Ì", r"Í", r"Î", r"Ï",
    r"Ð", r"Ñ", r"Ò", r"Ó", r"Ô", r"Õ", r"Ö", r"×", r"Ø", r"Ù", r"Ú", r"Û", r"Ü", r"Ý", r"Þ", r"ß",
    r"à", r"á", r"â", r"ã", r"ä", r"å", r"æ", r"ç", r"è", r"é", r"ê", r"ë", r"ì", r"í", r"î", r"ï",
    r"ð", r"ñ", r"ò", r"ó", r"ô", r"õ", r"ö", r"÷", r"ø", r"ù", r"ú", r"û", r"ü", r"ý", r"þ", r"ÿ",
];

/// Windows 1252に対応する文字
/// 対応する文字がない場合は"$xx"
/// https://ja.wikipedia.org/wiki/Windows-1252
const WINDOWS1252_CHARS: [&str; 256] =
[
    "$00", "$01", "$02", "$03", "$04", "$05", "$06", "$07", "$08", "$09", "$0A", "$0B", "$0C", "$0D", "$0E", "$0F",
    "$10", "$11", "$12", "$13", "$14", "$15", "$16", "$17", "$18", "$19", "$1A", "$1B", "$1C", "$1D", "$1E", "$1F",
    r"SP", r"!", "\"", r"#", r"$", r"%", r"&", r"'", r"(", r")", r"*", r"+", r",", r"-", r".", r"/",
    r"0", r"1", r"2", r"3", r"4", r"5", r"6", r"7", r"8", r"9", r":", r";", r"<", r"=", r">", r"?",
    r"@", r"A", r"B", r"C", r"D", r"E", r"F", r"G", r"H", r"I", r"J", r"K", r"L", r"M", r"N", r"O",
    r"P", r"Q", r"R", r"S", r"T", r"U", r"V", r"W", r"X", r"Y", r"Z", r"[", r"\", r"]", r"^", r"_",
    r"`", r"a", r"b", r"c", r"d", r"e", r"f", r"g", r"h", r"i", r"j", r"k", r"l", r"m", r"n", r"o",
    r"p", r"q", r"r", r"s", r"t", r"u", r"v", r"w", r"x", r"y", r"z", r"{", r"|", r"}", r"~", r"DEL",
    r"€", "$81", r"‚", r"ƒ", r"„", r"…", r"†", r"‡", r"ˆ", r"‰", r"Š", r"‹", r"Œ", "$8D", r"Ž", "$8F",
    "$90", r"‘", r"’", r"“", r"”", r"•", r"–", r"—", r"˜", r"™", r"š", r"›", r"œ", "$9D", r"ž", r"Ÿ",
    r"NBSP", r"¡", r"¢", r"£", r"¤", r"¥", r"¦", r"§", r"¨", r"©", r"ª", r"«", r"¬", r"SHY", r"®", r"¯",
    r"°", r"±", r"²", r"³", r"´", r"µ", r"¶", r"·", r"¸", r"¹", r"º", r"»", r"¼", r"½", r"¾", r"¿",
    r"À", r"Á", r"Â", r"Ã", r"Ä", r"Å", r"Æ", r"Ç", r"È", r"É", r"Ê", r"Ë", r"Ì", r"Í", r"Î", r"Ï",
    r"Ð", r"Ñ", r"Ò", r"Ó", r"Ô", r"Õ", r"Ö", r"×", r"Ø", r"Ù", r"Ú", r"Û", r"Ü", r"Ý", r"Þ", r"ß",
    r"à", r"á", r"â", r"ã", r"ä", r"å", r"æ", r"ç", r"è", r"é", r"ê", r"ë", r"ì", r"í", r"î", r"ï",
    r"ð", r"ñ", r"ò", r"ó", r"ô", r"õ", r"ö", r"÷", r"ø", r"ù", r"ú", r"û", r"ü", r"ý", r"þ", r"ÿ",
];

/// CP850に対応するユニコードのコードポイント
/// 0x80移行のみ(～0x7fはASCIIと同じ)
/// https://ja.wikipedia.org/wiki/%E3%82%B3%E3%83%BC%E3%83%89%E3%83%9A%E3%83%BC%E3%82%B8850
const CP850_CHARS: [i32; 128] = [
    /* Ç */ 0x00C7, /* ü */ 0x00FC, /* é */ 0x00E9, /* â */ 0x00E2, /* ä */ 0x00E4, /* à */ 0x00E0, /* å */ 0x00E5, /* ç */ 0x00E7, /* ê */ 0x00EA, /* ë */ 0x00EB, /* è */ 0x00E8, /* ï */ 0x00EF, /* î */ 0x00EE, /* ì */ 0x00EC, /* Ä */ 0x00C4, /* Å */ 0x00C5,
    /* É */ 0x00C9, /* æ */ 0x00E6, /* Æ */ 0x00C6, /* ô */ 0x00F4, /* ö */ 0x00F6, /* ò */ 0x00F2, /* û */ 0x00FB, /* ù */ 0x00F9, /* ÿ */ 0x00FF, /* Ö */ 0x00D6, /* Ü */ 0x00DC, /* ø */ 0x00F8, /* £ */ 0x00A3, /* Ø */ 0x00D8, /* × */ 0x00D7, /* ƒ */ 0x0192,
    /* á */ 0x00E1, /* í */ 0x00ED, /* ó */ 0x00F3, /* ú */ 0x00FA, /* ñ */ 0x00F1, /* Ñ */ 0x00D1, /* ª */ 0x00AA, /* º */ 0x00BA, /* ¿ */ 0x00BF, /* ® */ 0x00AE, /* ¬ */ 0x00AC, /* ½ */ 0x00BD, /* ¼ */ 0x00BC, /* ¡ */ 0x00A1, /* « */ 0x00AB, /* » */ 0x00BB,
    /* ░ */ 0x2591, /* ▒ */ 0x2592, /* ▓ */ 0x2593, /* │ */ 0x2502, /* ┤ */ 0x2524, /* Á */ 0x00C1, /* Â */ 0x00C2, /* À */ 0x00C0, /* © */ 0x00A9, /* ╣ */ 0x2563, /* ║ */ 0x2551, /* ╗ */ 0x2557, /* ╝ */ 0x255D, /* ¢ */ 0x00A2, /* ¥ */ 0x00A5, /* ┐ */ 0x2510,
    /* └ */ 0x2514, /* ┴ */ 0x2534, /* ┬ */ 0x252C, /* ├ */ 0x251C, /* ─ */ 0x2500, /* ┼ */ 0x253C, /* ã */ 0x00E3, /* Ã */ 0x00C3, /* ╚ */ 0x255A, /* ╔ */ 0x2554, /* ╩ */ 0x2569, /* ╦ */ 0x2566, /* ╠ */ 0x2560, /* ═ */ 0x2550, /* ╬ */ 0x256C, /* ¤ */ 0x00A4,
    /* ð */ 0x00F0, /* Ð */ 0x00D0, /* Ê */ 0x00CA, /* Ë */ 0x00CB, /* È */ 0x00C8, /* ı */ 0x0131, /* Í */ 0x00CD, /* Î */ 0x00CE, /* Ï */ 0x00CF, /* ┘ */ 0x2518, /* ┌ */ 0x250C, /* █ */ 0x2588, /* ▄ */ 0x2584, /* ¦ */ 0x00A6, /* Ì */ 0x00CC, /* ▀ */ 0x2580,
    /* Ó */ 0x00D3, /* ß */ 0x00DF, /* Ô */ 0x00D4, /* Ò */ 0x00D2, /* õ */ 0x00F5, /* Õ */ 0x00D5, /* µ */ 0x00B5, /* þ */ 0x00FE, /* Þ */ 0x00DE, /* Ú */ 0x00DA, /* Û */ 0x00DB, /* Ù */ 0x00D9, /* ý */ 0x00FD, /* Ý */ 0x00DD, /* ¯ */ 0x00AF, /* ´ */ 0x00B4,
    /* SHY */ 0x00AD, /* ± */ 0x00B1, /* ‗ */ 0x2017, /* ¾ */ 0x00BE, /* ¶ */ 0x00B6, /* § */ 0x00A7, /* ÷ */ 0x00F7, /* ¸ */ 0x00B8, /* ° */ 0x00B0, /* ¨ */ 0x00A8, /* · */ 0x00B7, /* ¹ */ 0x00B9, /* ³ */ 0x00B3, /* ² */ 0x00B2, /* ■ */ 0x25A0, /* NBSP */ 0x00A0,
];

const IBM850_CHARS: [i32; 128] = [
    /* Ç */ 0x00C7, /* ü */ 0x00FC, /* é */ 0x00E9, /* â */ 0x00E2, /* ä */ 0x00E4, /* à */ 0x00E0, /* å */ 0x00E5, /* ç */ 0x00E7, /* ê */ 0x00EA, /* ë */ 0x00EB, /* è */ 0x00E8, /* ï */ 0x00EF, /* î */ 0x00EE, /* ì */ 0x00EC, /* Ä */ 0x00C4, /* Å */ 0x00C5,
    /* É */ 0x00C9, /* æ */ 0x00E6, /* Æ */ 0x00C6, /* ô */ 0x00F4, /* ö */ 0x00F6, /* ò */ 0x00F2, /* û */ 0x00FB, /* ù */ 0x00F9, /* ÿ */ 0x00FF, /* Ö */ 0x00D6, /* Ü */ 0x00DC, /* ø */ 0x00F8, /* £ */ 0x00A3, /* Ø */ 0x00D8, /* × */ 0x00D7, /* ƒ */ 0x0192,
    /* á */ 0x00E1, /* í */ 0x00ED, /* ó */ 0x00F3, /* ú */ 0x00FA, /* ñ */ 0x00F1, /* Ñ */ 0x00D1, /* ª */ 0x00AA, /* º */ 0x00BA, /* ¿ */ 0x00BF, /* ® */ 0x00AE, /* ¬ */ 0x00AC, /* ½ */ 0x00BD, /* ¼ */ 0x00BC, /* ¡ */ 0x00A1, /* « */ 0x00AB, /* » */ 0x00BB,
    /* ░ */ 0x2591, /* ▒ */ 0x2592, /* ▓ */ 0x2593, /* │ */ 0x2502, /* ┤ */ 0x2524, /* Á */ 0x00C1, /* Â */ 0x00C2, /* À */ 0x00C0, /* © */ 0x00A9, /* ╣ */ 0x2563, /* ║ */ 0x2551, /* ╗ */ 0x2557, /* ╝ */ 0x255D, /* ¢ */ 0x00A2, /* ¥ */ 0x00A5, /* ┐ */ 0x2510,
    /* └ */ 0x2514, /* ┴ */ 0x2534, /* ┬ */ 0x252C, /* ├ */ 0x251C, /* ─ */ 0x2500, /* ┼ */ 0x253C, /* ã */ 0x00E3, /* Ã */ 0x00C3, /* ╚ */ 0x255A, /* ╔ */ 0x2554, /* ╩ */ 0x2569, /* ╦ */ 0x2566, /* ╠ */ 0x2560, /* ═ */ 0x2550, /* ╬ */ 0x256C, /* ¤ */ 0x00A4,
    /* ð */ 0x00F0, /* Ð */ 0x00D0, /* Ê */ 0x00CA, /* Ë */ 0x00CB, /* È */ 0x00C8, /* ı */ 0x0131, /* Í */ 0x00CD, /* Î */ 0x00CE, /* Ï */ 0x00CF, /* ┘ */ 0x2518, /* ┌ */ 0x250C, /* █ */ 0x2588, /* ▄ */ 0x2584, /* ¦ */ 0x00A6, /* Ì */ 0x00CC, /* ▀ */ 0x2580,
    /* Ó */ 0x00D3, /* ß */ 0x00DF, /* Ô */ 0x00D4, /* Ò */ 0x00D2, /* õ */ 0x00F5, /* Õ */ 0x00D5, /* µ */ 0x00B5, /* þ */ 0x00FE, /* Þ */ 0x00DE, /* Ú */ 0x00DA, /* Û */ 0x00DB, /* Ù */ 0x00D9, /* ý */ 0x00FD, /* Ý */ 0x00DD, /* ¯ */ 0x00AF, /* ´ */ 0x00B4,
    /* SHY */ 0x00AD, /* ± */ 0x00B1, /* ‗ */ 0x2017, /* ¾ */ 0x00BE, /* ¶ */ 0x00B6, /* § */ 0x00A7, /* ÷ */ 0x00F7, /* ¸ */ 0x00B8, /* ° */ 0x00B0, /* ¨ */ 0x00A8, /* · */ 0x00B7, /* ¹ */ 0x00B9, /* ³ */ 0x00B3, /* ² */ 0x00B2, /* ■ */ 0x25A0, /* NBSP */ 0x00A0,
];

/// 変になったファイル名をちゃんとする
/// "Sample%C9%E5%E9%BD%F2%B9.pptx" -> "Sample炊き方.pptx"
pub fn decode_filename(s: &str) -> String {
    // '%'が含まれていないファイル名は変換しない
    if !s.contains("%") {
        return s.to_string();
    }
    // 変換バッファ
    let mut vname: Vec<u8> = Vec::new();
    // %xxを入れるバッファ
    let mut vchar: Vec<char> = Vec::new();
    for c in s.chars() {
        if vchar.len() == 1 {
            vchar.push(c);
            continue;
        } else if vchar.len() == 2 {
            vchar.push(c);
            // "%E8"の先頭を削除
            vchar.remove(0);
            // "E8"を文字コードに変換
            let schar: String = vchar.iter().collect();
            // 16進数として数値に変換
            match i32::from_str_radix(&schar, 16) {
                Ok(code) => {
                    // 文字コードとして文字を表すバイト列に変換
                    let bs = code_to_bytes(code);
                    vname.write(&bs).unwrap();
                    vchar = Vec::new();
                    continue;
                },
                Err(err) => {
                    println!("ERROR: {}, {}", s, err);
                    return s.to_string();
                }
            }
        }
        if c == '%' {
            vchar.push(c);
        } else {
            let s = c.to_string();
            let bs = s.as_bytes();
            vname.write(bs).unwrap();
        }
    }
    if vchar.len() > 0 {
        for c in vchar.into_iter() {
            let s = c.to_string();
            let bs = s.as_bytes();
            vname.write(bs).unwrap();
        }
    }
    // SJISに変換して返す
    WINDOWS_31J.decode(&vname, DecoderTrap::Ignore).unwrap()
}

/// 与えられた文字コードに対するWindows1252の対応する文字を返す
// fn code_to_bytes(n: i32) -> Vec<u8> {
//     let s = WINDOWS1252_CHARS[n as usize];
//     let ss: Vec<char> = s.chars().collect();
//     vec![ss[0] as u8]
// }

/// IBM850_CHARSのユニコードのコードポイントと一致する文字コードを返す
fn code_to_bytes(n: i32) -> Vec<u8> {
    if n < 128 {
        return vec![n as u8];
    }
    for (i, c) in IBM850_CHARS.iter().enumerate() {
        if n == *c as i32 {
            return vec![(i + 0x80) as u8];
        }
    }
    vec![0x20]
}

// fn iec8859_1_str_to_windows1252(s: &str) -> i32 {
//     for (i, c) in WINDOWS1252_CHARS.iter().enumerate() {
//         if s == *c {
//             return i as i32;
//         }
//     }
//     0x20
// }
